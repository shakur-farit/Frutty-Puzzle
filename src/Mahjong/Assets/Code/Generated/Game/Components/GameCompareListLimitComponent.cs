//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCompareListLimit;

    public static Entitas.IMatcher<GameEntity> CompareListLimit {
        get {
            if (_matcherCompareListLimit == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CompareListLimit);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCompareListLimit = matcher;
            }

            return _matcherCompareListLimit;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.TileComparer.CompareListLimit compareListLimit { get { return (Code.Gameplay.Features.TileComparer.CompareListLimit)GetComponent(GameComponentsLookup.CompareListLimit); } }
    public int CompareListLimit { get { return compareListLimit.Value; } }
    public bool hasCompareListLimit { get { return HasComponent(GameComponentsLookup.CompareListLimit); } }

    public GameEntity AddCompareListLimit(int newValue) {
        var index = GameComponentsLookup.CompareListLimit;
        var component = (Code.Gameplay.Features.TileComparer.CompareListLimit)CreateComponent(index, typeof(Code.Gameplay.Features.TileComparer.CompareListLimit));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCompareListLimit(int newValue) {
        var index = GameComponentsLookup.CompareListLimit;
        var component = (Code.Gameplay.Features.TileComparer.CompareListLimit)CreateComponent(index, typeof(Code.Gameplay.Features.TileComparer.CompareListLimit));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCompareListLimit() {
        RemoveComponent(GameComponentsLookup.CompareListLimit);
        return this;
    }
}
